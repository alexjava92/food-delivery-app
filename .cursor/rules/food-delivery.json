{
    "name": "Food Delivery App Conventions",
    "description": "Правила и соглашения для проекта доставки еды",
    "rules": [
        {
            "rule": "Отвечай на русском языке мне. комментарии в коде так же на русском"
          },
      {
        "rule": "Фронтенд написан на Next.js + React. Используется Redux Toolkit Query для API, и Telegram WebApp."
      },
      {
        "rule": "Бэкенд написан на NestJS, используется PostgreSQL, Sequelize, WebSocket и Redis. Авторизация через JWT. "
      },
      {
        "rule": "Проект делится на два репозитория: `food-delivery-main` (frontend) и `food-delivery-server-main` (backend)."
      },
      {
        "rule": "Все заказы и пользователи связаны через Telegram chatId, но в запросах RTK Query используется user.id. Необходимо учитывать различие этих ID при обновлении данных."
      },
      {
        "rule": "Включение технических работ управляется через флаг maintenance в базе данных. При включении флага фронтенд должен показывать заглушку, данные с сервера не грузятся."
      },
      {
        "rule": "Кэширование данных реализовано через Redis с использованием cache-manager-ioredis-yet. Кэшируются категории и авторизация пользователей."
      },
      {
        "rule": "В проекте используются WebSocket-события для уведомлений о смене статуса заказа. Обновление данных происходит через invalidateTags в RTK Query."
      }
    ]
  }
  